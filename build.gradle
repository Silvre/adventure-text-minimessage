buildscript {
  ext {
    indraVersion = "2.0.4"
  }
}

plugins {
  id "net.kyori.indra" version "$indraVersion"
  id "net.kyori.indra.publishing.sonatype" version "$indraVersion"
  id "net.kyori.indra.license-header" version "$indraVersion"
  id "net.kyori.indra.checkstyle" version "$indraVersion"
  id "org.xbib.gradle.plugin.jflex" version "1.5.0"
  id "me.champeau.jmh" version "0.6.4"
}

// Adventure version
ext.adventure = "4.8.1"

group "net.kyori"
version "4.2.0-SNAPSHOT"
description "A string-based, user-friendly format for representing Minecraft: Java Edition chat components."

repositories {
  mavenCentral()
}

dependencies {
  api "net.kyori:adventure-api:${adventure}"
  testImplementation "net.kyori:adventure-text-serializer-plain:${adventure}"
  testImplementation "net.kyori:adventure-text-serializer-gson:${adventure}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
  testImplementation "org.junit.jupiter:junit-jupiter-engine:5.7.2"
  checkstyle "ca.stellardrift:stylecheck:0.1"
}

indra {
  javaVersions {
    testWith(8, 11, 16)
  }

  github("KyoriPowered", "adventure-text-minimessage") {
    ci(true)
  }
  mitLicense()

  configurePublications {
    pom {
      developers {
        developer {
          id = "minidigger"
          name = "MiniDigger"
        }
      }
    }
  }
}

sourceSets {
  main {
    java {
      // JFlex output
      srcDir "build/generated-src"
    }
  }
}

tasks.compileJava {
    // Generated JFlex source uses fall-throughs heavily
    options.compilerArgs << "-Xlint:-fallthrough"
}

license {
  exclude("**/MiniMessageLexer.java")
}

checkstyleJmh.exclude("**")

jar {
  manifest.attributes(
    "Automatic-Module-Name": "net.kyori.adventure.text.minimessage"
  )
}
